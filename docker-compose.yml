version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    restart: always
    env_file: backend/prod.env
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    networks:
      - app-net

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-net

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    env_file:
      - ./backend/prod.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-net

  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-net

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - app-net

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./reload-nginx.sh:/reload-nginx.sh
    command: sh -c 'certbot certonly --webroot --webroot-path=/var/www/certbot --email pubalibasak16@gmail.com --agree-tos --no-eff-email --non-interactive -d pubali.dev -d www.pubali.dev && /reload-nginx.sh'
    networks:
      - app-net


volumes:
  postgres_data:


networks:
  app-net:
    driver: bridge
